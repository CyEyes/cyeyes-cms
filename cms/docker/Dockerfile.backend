# ============================================
# CyEyes CMS Backend - Production Dockerfile
# Uses tsx to run TypeScript directly (no build step)
# ============================================

FROM node:20-alpine

# Install PM2 globally
RUN npm install -g pm2

# Create non-root user
RUN addgroup -g 1001 -S nodejs && \
    adduser -S nodejs -u 1001

WORKDIR /app

# Install build dependencies for native modules
RUN apk add --no-cache python3 make g++

# Copy package files
COPY backend/package*.json ./

# Install dependencies (including dev dependencies for tsx)
RUN npm ci && \
    npm cache clean --force

# Copy source code and configuration
COPY backend/tsconfig.json ./
COPY backend/drizzle.config.ts ./
COPY backend/ecosystem.config.js ./
COPY backend/src ./src
COPY backend/drizzle ./drizzle

# Create necessary directories
RUN mkdir -p database uploads logs && \
    chown -R nodejs:nodejs database uploads logs && \
    chown -R nodejs:nodejs /app

# Switch to non-root user
USER nodejs

# Expose port
EXPOSE 3000

# Health check
HEALTHCHECK --interval=30s --timeout=3s --start-period=10s --retries=3 \
  CMD node -e "require('http').get('http://localhost:3000/api/health', (r) => {process.exit(r.statusCode === 200 ? 0 : 1)})"

# Start with PM2 using tsx
CMD ["pm2-runtime", "start", "ecosystem.config.js"]
